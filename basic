//Declare a list: List<DataType> listName = new List<DataType>();

//You can have duplicate elements in a list.

List <String> fruits = new List <String> ();
System.debug(fruites);

//method 1: add elements to a list after it has been created 
List<String> fruitList = new List <String>();
fruitList.add('orange');

//method 2: declare a string list and add the elements to the list or create a list of fruits
List<String> fruitList = new List <String> {'pear', 'apple', strawberry'};

//use the get method to get the value at index 2
System.debug('The index 3 value is " + fruitList.get(2));

//remove an element
fruitList.remove(2);

// iterate over alist to read elements
for (Integer i=0; i<fruitList.size();i++){
    System.debug(fruitList[i]);
------------------------------------------------------------------------------------------------------
//Declare an array variable;
Account [] accs;


//Declare an array of string
String [] groceies = new String [4];

-------------------------------------------------------------------------------------------------------------

//using for loop syntax, loop over the list of strings
/*for (data_type variable_name : list_name or set_name){
    // Loop body
}
*/

for (String fruit: fruitList)  {
  System.debug (fruit);
}

//add a fruit to the list using the add method
fruitList.add('blueberry');

//check the size of the fruit list
fruitList.size();


//write a SOQL query to receive opportunity records from Salesforce
List<Opportunity> recentWonOpp = [SELECT ID, Name, Amount FROM Opportunity WHERE IsCLOSE =TRUE ORDER BY DESC LIMIT 1];


/* create a class that has a method accepting two strings. The method searches for contacts that have a last name matching the first string and a mailing postal code 
(API name: MailingPostalCode) matching the second. It gets the ID and Name of those contacts and returns them. */

public class ContactSearch {
        public static List<Contact> searchForContacts(String lastName, String mailingPostalCode) {
            return [SELECT Id, Name, LastName, MailingPostalCode
                                     FROM Contact
                                     WHERE LastName = :lastName AND MailingPostalCode = :mailingPostalCode];
        }   
    }


---------------------------------------------------------------------------------
//Declare a new varaible acct to a sObject
Account acct = new Account ();


